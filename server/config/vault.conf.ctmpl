{{with $environment := env "ENVIRONMENT"}}
{{with $vaultFile := env "FILE"}}
{{with $environmentFile := file "config/not-secret.conf" | parseJSON}}
{{with $environmentData := index $environmentFile $environment}}
{{with $emailEnvironment := index $environmentData "email"}}
{{with $emailEnvironment_reminderNotifications := index $emailEnvironment "reminderNotifications"}}
{{with $quartzEnvironment := index $environmentData "quartz"}}
{{with $portalEnvironment := index $environmentData "portal"}}
{{with $mbcEnvironment := index $environmentData "mbc"}}
{{with $errorAlertEnvironment := index $environmentData "errorAlert"}}
{{with $externalShipperEnvironment := index $environmentData "externalShipper"}}
{{with $conf := vault (printf $portalEnvironment.vault $vaultFile )}}
{{with $bsp := index $conf.Data "bsp"}}
{{with $browserSecurity := index $conf.Data "browser_security"}}
{{with $auth0 := index $conf.Data "auth0"}}
{{with $auth_connections := index $auth0 "connections"}}
{{with $db := index $conf.Data "portal"}}
{{with $email := index $conf.Data "email"}}
{{with $ddp := index $conf.Data "ddp"}}
{{with $externalShipper := index $conf.Data "externalShipper"}}
{{with $ui := index $conf.Data "ui"}}
{{with $eel := index $conf.Data "eel"}}
{{with $mbc := index $conf.Data "mbc"}}
{{with $errorAlert := index $conf.Data "errorAlert"}}



{
    "portal": {
      {{if eq $vaultFile "config"}}
        "environment": "{{$portalEnvironment.environment}}",
      {{else}}
        "environment": "Local DSM ({{$vaultFile}})",
      {{end}}
        "dbSkipSsl": {{$portalEnvironment.dbSkipSsl}},
        "cors": {{$portalEnvironment.cors}},
        "dbUrl": "{{$db.url}}",
        "port": {{$portalEnvironment.port}},
        "dbSslKeyStore": "{{$portalEnvironment.dbSslKeyStore}}",
        "dbSslKeyStorePwd": "{{$db.dbSslKeyStorePwd}}",
        "dbSslTrustStore": "{{$portalEnvironment.dbSslTrustStore}}",
        "dbSslTrustStorePwd": "{{$db.dbSslTrustStorePwd}}",
        "jwtMonitoringSecret": "{{$db.jwtMonitoringSecret}}",
        "jwtDdpSecret": "{{$db.jwtDdpSecret}}",
        "vault": "{{(printf $portalEnvironment.vault $vaultFile )}}",
        "appRoute": "{{$portalEnvironment.appRoute}}",
      {{if eq $vaultFile "config"}}
        "googleProjectCredentials": "{{$portalEnvironment.googleProjectCredentials}}",
        "googleProjectName": "{{$portalEnvironment.googleProjectName}}",
      {{else}}
        "googleProjectCredentials": "",
        "googleProjectName": "",
      {{end}}
        "discardSampleBucket": "{{$portalEnvironment.discardSampleBucket}}",
        "configBucket": "{{$portalEnvironment.configBucket}}",
        "enableBlindTrustDDP": {{$portalEnvironment.enableBlindTrustDDP}}
    },
    "bsp": {
        "secret": "{{$bsp.secret}}"
    },
    "browser_security": {
        "jwt_secret": "{{$browserSecurity.jwt_secret}}",
        "cookie_name": "{{$browserSecurity.cookie_name}}",
        "cookie_salt": "{{$browserSecurity.cookie_salt}}"
    },
    "auth0": {
        "account": "{{$auth0.account}}",
        "secret": "{{$auth0.secret}}",
        "clientKey": "{{$auth0.clientKey}}",
        "connections": [
            {{range $v := $auth_connections}}
                "{{$v}}",
            {{end}}
        ],
        "domain": "{{$auth0.domain}}",
        "isSecretBase64Encoded": {{$auth0.isSecretBase64Encoded}},
        "mgtKey": "{{$auth0.mgtKey}}",
        "mgtSecret": "{{$auth0.mgtSecret}}",
        "mgtApiUrl": "{{$auth0.mgtApiUrl}}",
        "audience": "{{$auth0.audience}}"
    },
    "email": {
        "key": "{{$email.key}}",
      {{if eq $vaultFile "config"}}
        "frontendUrl": "{{$emailEnvironment.frontendUrl}}",
      {{else}}
        "frontendUrl": "http://localhost:4200",
      {{end}}
        "cron_expression_GP_notification": "{{$emailEnvironment.cron_expression_GP_notification}}",
        "gp_recipient": "{{$emailEnvironment.gp_recipient}}",
        "clientSettings": """{{$emailEnvironment.clientSettings | toJSON}}""",
        "reminderNotifications": """[{{range $emailEnvironment_reminderNotifications}}{{ . | toJSON }},
            {{end}}]"""
    },
    "quartz": {
      {{if eq $vaultFile "config"}}
        "enableJobs": true,
      {{else}}
        "enableJobs": false,
      {{end}}
        "ddpRequestJob_jobIntervalInSeconds": {{$quartzEnvironment.ddpRequestJob_jobIntervalInSeconds}},
        "notificationJob_jobIntervalInSeconds": {{$quartzEnvironment.notificationJob_jobIntervalInSeconds}},
        "labelCreationJob_jobIntervalInSeconds": {{$quartzEnvironment.labelCreationJob_jobIntervalInSeconds}},
        "ddp_event_trigger_cron_expression": "{{$quartzEnvironment.ddp_event_trigger_cron_expression}}",
        "externalShipper_cron_expression": "{{$quartzEnvironment.externalShipper_cron_expression}}",
        "externalShipper_cron_expression_additional": "{{$quartzEnvironment.externalShipper_cron_expression_additional}}",
        "shipmentStatusJob_cron_expression": "{{$quartzEnvironment.shipmentStatusJob_cron_expression}}"
    },
    "ui": {
        "baseUrl": "{{$ui.baseUrl}}",
        "production": {{$ui.production}}
    },
    "ddp": """[{{range $ddp}}{{ . | toJSON }},
        {{end}}]""",
    "mbc": {
        "url": "{{$mbc.url}}",
        "postgresql": {{$mbcEnvironment.postgresql}},
        "encryption_key": "{{$mbc.encryption_key}}"
    },
    "errorAlert":    {
        "className": "{{$errorAlertEnvironment.className}}",
        "key": "{{$errorAlert.key}}",
        "clientSettings": """{{$errorAlertEnvironment.clientSettings | toJSON}}""",
      {{if eq $vaultFile "config"}}
        "recipientAddress": "{{$errorAlertEnvironment.recipientAddress}}"
      {{else}}
        "recipientAddress": ""
      {{end}}
    }
}




{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}
{{end}}