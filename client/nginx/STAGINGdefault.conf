server {
    # this conditionally bounces you to https
    # but only if you came in from the google load balancer
    if ($http_x_forwarded_proto = "http") {
       return 301 https://$host$request_uri;
    }

    listen 443 ssl;
    add_header Cache-Control "no-store";

#    server_name .dsm-staging.datadonationplatform.org;
    ssl_certificate /etc/nginx/conf.d/cert.crt;
    ssl_certificate_key /etc/nginx/conf.d/cert.key;

    # next two lines are needed for handling compressed data behind google load balancer
    gzip_proxied any;
    gzip_vary on;
    gzip_static on;

    root /usr/share/nginx/html;

    location /assets/images {
       sendfile on;
       tcp_nodelay on;
       tcp_nopush on;
       add_header Cache-Control "max-age=43200,public";
       break;
    }

    location / {
       sendfile on;
       tcp_nopush on;
       add_header Cache-Control "max-age=43200,public";
       try_files $uri $uri/ /index.html;
    }

    error_page 404 /index.html;
        location = /index.html {
            internal;
    }

   error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }

    location /.well-known/acme-challenge {

    }

     # when backend is deployed, uncomment these lines
     # to enable the proxy to talk to the backend
    location /api/ {
        add_header Cache-Control "no-store";
        proxy_pass http://staging-backend:5555/;
    }

    location /ddp/ {
        add_header Cache-Control "no-store";
        proxy_pass http://staging-backend:5555/api/;
    }

    location /app/ {
        add_header Cache-Control "no-store";
        proxy_pass http://staging-backend:5555/app/;
    }

    location /info/ {
        add_header Cache-Control "no-store";
        proxy_pass http://staging-backend:5555/info/;
    }
}

#only enable after you get the certs
server {
    listen 80;
    return 301 https://$host$request_uri;
}
